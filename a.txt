1.
    Define a new system call sys_hello()

Create a directory hello in the kernel source directory:-

mkdir hello

Create a “hello.c” file in this folder

gedit hello.c

add the following code:-

#include <linux/kernel.h>

 asmlinkage long sys_hello(void)
{
        printk(“Hello world\n”);
        return 0;
 }



2.  Create a “Makefile” in the hello folder and add the given line  to it.

gedit Makefile

add the following line to it:-

obj-y := hello.o


3.
change back into the linux-3.16 folder and open Makefile

gedit Makefile

goto line number 842 which says :-   “core-y += kernel/ mm/ fs/ ipc/ security/ crypto/ block/ ”

change this to   “core-y += kernel/ mm/ fs/ ipc/ security/ crypto/ block/ hello/”


    Add the new system call (sys_hello() ) into the system call table (syscall_32.tbl file)

4.
cd arch/x86/syscalls

gedit syscall_32.tbl

add the following line in the end of the file :-

354    i386    hello    sys_hello

354 – It is the number of the system call . It should be one plus the number of the last system call. (it was 354 in my system). This has to be noted down to make the system call in the userspace program.


5.
    Add the new system call(sys_hello() )  in the system call header file.

cd  include/linux/

gedit syscalls.h

add the following line to the end of the file just before the #endif  statement at the very bottom.

asmlinkage long sys_hello(void);

This defines the prototype of the function of our system call.”asmlinkage” is a key word used to indicate that all parameters of the
function would be available on the stack.

5.
    Compile this kernel on your system.

To compile Linux Kernel the following are required to be installed.

    gcc latest version,
    ncurses development package
    system packages should be up-to date

Hence do the following in the terminal.

    sudo apt-get install gcc
    sudo apt-get install libncurses5-dev
    sudo apt-get update
    sudo apt-get upgrade

=> To configure your kernel use the following command:-

sudo make menuconfig

Once the above command is used to configure the Linux kernel,  you will get a pop up window with the list of menus and you can select the
items for the new configuration. If your unfamiliar with the configuration just check for the file systems menu and check whether “ext4” is chosen or not, if not select it and save the configuration.
If you like to have your existing configuration then run the below command.

sudo make oldconfig

Now to compile the kernel ; do make .

cd /usr/src/linux-3.16/

make

This might take several hours depending on your system (using hypervisors can take a longer time ). It took me 2-3 hours to get this compiled.

    To install /update the kernel.

To install this edited kernel run the following command:-

sudo make modules_install install

The above command will install the Linux Kernel 3.16 into your system.It will create some files under /boot/ directory and it will  automatically make a entry in your grub.cfg.  To check whether it made correct entry ; check the files under  /boot/ directory . If you have followed the steps without any error you will find the following files in it in addition to others.

    System.map-3.16.0
    vmlinuz-3.16.0
    initrd.img-3.16.0
    config-3.16.0

Now to update the kernel in your system reboot the system . You can use the following command.

shutdown -r now

After rebooting you can verify the kernel version using the following command;

uname -r

    To test the system call.

Create a “userspace.c” program in your home folder and type in the following code :-

#include <stdio.h>
#include <linux/kernel.h>
#include <sys/syscall.h>
#include <unistd.h>
int main()
{
         long int amma = syscall(354);
         printf(“System call sys_hello returned %ld\n”, amma);
         return 0;
}

Now compile this program using the following command.

gcc userspace.c

If all goes well you will not have any errors else, rectify the errors.

Now run the program using the following command.

./a.out

You will see the following line getting printed in the terminal if all the steps were followed correctly.

“System call sys_hello returned 0“.

Now to check the message of the kernel you can run the following command.

dmesg


